{"ast":null,"code":"/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\nexport var getCategories = function getCategories(categories) {\n  return new Promise(function (resolve, reject) {\n    var category = mostOcurrenciesElement(categories);\n    axios.get(\"/api/categories/\".concat(category)).then(function (res) {\n      resolve(res.data.parentCategories);\n    })[\"catch\"](function (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        reject(new Error(err.response.data.message));\n      } else {\n        reject(new Error('Error inesperado'));\n      }\n    });\n  });\n};\nexport var getItemCategory = function getItemCategory(itemId) {\n  return new Promise(function (resolve, reject) {\n    axios.get(\"/api/categories/item/\".concat(itemId)).then(function (res) {\n      resolve(res.data.category_id);\n    })[\"catch\"](function (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        reject(new Error(err.response.data.message));\n      } else {\n        reject(new Error('Error inesperado'));\n      }\n    });\n  });\n};\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n\n  var modeMap = {};\n  var maxEl = array[0];\n  var maxCount = 1;\n\n  for (var i = 0; i < array.length; i++) {\n    var el = array[i];\n\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n}","map":{"version":3,"sources":["/Users/mpauluk/Documents/otros/mercadolibre-test/services/categoryService.js"],"names":["axios","getCategories","categories","Promise","resolve","reject","category","mostOcurrenciesElement","get","then","res","data","parentCategories","err","response","message","Error","getItemCategory","itemId","category_id","array","length","modeMap","maxEl","maxCount","i","el"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD;AAAA,SAC3B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B,QAAMC,QAAQ,GAAGC,sBAAsB,CAACL,UAAD,CAAvC;AACAF,IAAAA,KAAK,CAACQ,GAAN,2BAA6BF,QAA7B,GACKG,IADL,CACU,UAACC,GAAD,EAAS;AACbN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASC,gBAAV,CAAP;AACD,KAHL,WAIW,UAACC,GAAD,EAAS;AACd,UAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaH,IAA7B,IAAqCE,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAA3D,EAAoE;AAClEV,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAUH,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAA5B,CAAD,CAAN;AACD,OAFD,MAEO;AACLV,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,kBAAV,CAAD,CAAN;AACD;AACF,KAVL;AAWD,GAbD,CAD2B;AAAA,CAAtB;AAgBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,SAC7B,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BL,IAAAA,KAAK,CAACQ,GAAN,gCAAkCU,MAAlC,GACKT,IADL,CACU,UAACC,GAAD,EAAS;AACbN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASQ,WAAV,CAAP;AACD,KAHL,WAIW,UAACN,GAAD,EAAS;AACd,UAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaH,IAA7B,IAAqCE,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAA3D,EAAoE;AAClEV,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAUH,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAA5B,CAAD,CAAN;AACD,OAFD,MAEO;AACLV,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,kBAAV,CAAD,CAAN;AACD;AACF,KAVL;AAWD,GAZD,CAD6B;AAAA,CAAxB;;AAeP,SAAST,sBAAT,CAAgCa,KAAhC,EAAuC;AACrC,MAAIA,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACD,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAGH,KAAK,CAAC,CAAD,CAAjB;AAAsB,MAAII,QAAQ,GAAG,CAAf;;AACtB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACC,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAMC,EAAE,GAAGN,KAAK,CAACK,CAAD,CAAhB;;AACA,QAAIH,OAAO,CAACI,EAAD,CAAP,IAAe,IAAnB,EAAyB;AACvBJ,MAAAA,OAAO,CAACI,EAAD,CAAP,GAAc,CAAd;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACI,EAAD,CAAP;AACD;;AACD,QAAIJ,OAAO,CAACI,EAAD,CAAP,GAAcF,QAAlB,EAA4B;AAC1BD,MAAAA,KAAK,GAAGG,EAAR;AACAF,MAAAA,QAAQ,GAAGF,OAAO,CAACI,EAAD,CAAlB;AACD;AACF;;AACD,SAAOH,KAAP;AACD","sourcesContent":["/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\n\nexport const getCategories = (categories) =>\n  new Promise((resolve, reject) => {\n    const category = mostOcurrenciesElement(categories);\n    axios.get(`/api/categories/${category}`)\n        .then((res) => {\n          resolve(res.data.parentCategories);\n        })\n        .catch((err) => {\n          if (err.response && err.response.data && err.response.data.message) {\n            reject(new Error(err.response.data.message));\n          } else {\n            reject(new Error('Error inesperado'));\n          }\n        });\n  });\n\nexport const getItemCategory = (itemId) =>\n  new Promise((resolve, reject) => {\n    axios.get(`/api/categories/item/${itemId}`)\n        .then((res) => {\n          resolve(res.data.category_id);\n        })\n        .catch((err) => {\n          if (err.response && err.response.data && err.response.data.message) {\n            reject(new Error(err.response.data.message));\n          } else {\n            reject(new Error('Error inesperado'));\n          }\n        });\n  });\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n  const modeMap = {};\n  let maxEl = array[0]; let maxCount = 1;\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n  return maxEl;\n}\n"]},"metadata":{},"sourceType":"module"}