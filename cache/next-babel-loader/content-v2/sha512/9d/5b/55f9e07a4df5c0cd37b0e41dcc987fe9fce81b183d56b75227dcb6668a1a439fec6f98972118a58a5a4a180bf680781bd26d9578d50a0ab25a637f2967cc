{"ast":null,"code":"/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\nexport const getCategories = categories => new Promise((resolve, reject) => {\n  const category = mostOcurrenciesElement(categories);\n  axios.get(`/api/categories/${category}`).then(res => {\n    resolve(res.data.parentCategories);\n  }).catch(err => {\n    if (err.response && err.response.data && err.response.data.message) {\n      reject(new Error(err.response.data.message));\n    } else {\n      reject(new Error('Error inesperado'));\n    }\n  });\n});\nexport const getItemCategory = itemId => new Promise((resolve, reject) => {\n  axios.get(`/api/categories/item/${itemId}`).then(res => {\n    resolve(res.data.category_id);\n  }).catch(err => {\n    if (err.response && err.response.data && err.response.data.message) {\n      reject(new Error(err.response.data.message));\n    } else {\n      reject(new Error('Error inesperado'));\n    }\n  });\n});\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n\n  const modeMap = {};\n  let maxEl = array[0];\n  let maxCount = 1;\n\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n}","map":null,"metadata":{},"sourceType":"module"}