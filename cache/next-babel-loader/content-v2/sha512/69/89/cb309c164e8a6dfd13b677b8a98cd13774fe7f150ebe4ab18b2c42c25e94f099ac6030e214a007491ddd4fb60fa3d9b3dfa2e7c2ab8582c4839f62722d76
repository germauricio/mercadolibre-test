{"ast":null,"code":"/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\nexport var getCategories = function getCategories(categories) {\n  return new Promise(function (resolve, reject) {\n    var category = mostOcurrenciesElement(categories);\n    axios.get(\"/api/categories/\".concat(category)).then(function (res) {\n      resolve(res.data.parentCategories);\n    })[\"catch\"](function (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        reject(new Error(err.response.data.message));\n      } else {\n        reject(new Error('Error inesperado'));\n      }\n    });\n  });\n};\nexport var getItemCategory = function getItemCategory(itemId) {\n  return new Promise(function (resolve, reject) {\n    axios.get(\"/api/categories/item/\".concat(itemId)).then(function (res) {\n      resolve(res.data.category_id);\n    })[\"catch\"](function (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        reject(new Error(err.response.data.message));\n      } else {\n        reject(new Error('Error inesperado'));\n      }\n    });\n  });\n};\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n\n  var modeMap = {};\n  var maxEl = array[0];\n  var maxCount = 1;\n\n  for (var i = 0; i < array.length; i++) {\n    var el = array[i];\n\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n}","map":null,"metadata":{},"sourceType":"module"}