{"ast":null,"code":"/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\nexport const getCategories = categories => new Promise((resolve, reject) => {\n  const category = mostOcurrenciesElement(categories);\n  axios.get(`/api/categories/${category}`).then(res => {\n    resolve(res.data.parentCategories);\n  }).catch(err => {\n    if (err.response && err.response.data && err.response.data.message) {\n      reject(new Error(err.response.data.message));\n    } else {\n      reject(new Error('Error inesperado'));\n    }\n  });\n});\nexport const getItemCategory = itemId => new Promise((resolve, reject) => {\n  axios.get(`/api/categories/item/${itemId}`).then(res => {\n    resolve(res.data.category_id);\n  }).catch(err => {\n    if (err.response && err.response.data && err.response.data.message) {\n      reject(new Error(err.response.data.message));\n    } else {\n      reject(new Error('Error inesperado'));\n    }\n  });\n});\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n\n  const modeMap = {};\n  let maxEl = array[0];\n  let maxCount = 1;\n\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n}","map":{"version":3,"sources":["/Users/mpauluk/Documents/otros/mercadolibre-test/services/categoryService.js"],"names":["axios","getCategories","categories","Promise","resolve","reject","category","mostOcurrenciesElement","get","then","res","data","parentCategories","catch","err","response","message","Error","getItemCategory","itemId","category_id","array","length","modeMap","maxEl","maxCount","i","el"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAC3B,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,QAAQ,GAAGC,sBAAsB,CAACL,UAAD,CAAvC;AACAF,EAAAA,KAAK,CAACQ,GAAN,CAAW,mBAAkBF,QAAS,EAAtC,EACKG,IADL,CACWC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASC,gBAAV,CAAP;AACD,GAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACd,QAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaJ,IAA7B,IAAqCG,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OAA3D,EAAoE;AAClEX,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAUH,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OAA5B,CAAD,CAAN;AACD,KAFD,MAEO;AACLX,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAU,kBAAV,CAAD,CAAN;AACD;AACF,GAVL;AAWD,CAbD,CADK;AAgBP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAC7B,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BL,EAAAA,KAAK,CAACQ,GAAN,CAAW,wBAAuBW,MAAO,EAAzC,EACKV,IADL,CACWC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASS,WAAV,CAAP;AACD,GAHL,EAIKP,KAJL,CAIYC,GAAD,IAAS;AACd,QAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaJ,IAA7B,IAAqCG,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OAA3D,EAAoE;AAClEX,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAUH,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OAA5B,CAAD,CAAN;AACD,KAFD,MAEO;AACLX,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAU,kBAAV,CAAD,CAAN;AACD;AACF,GAVL;AAWD,CAZD,CADK;;AAeP,SAASV,sBAAT,CAAgCc,KAAhC,EAAuC;AACrC,MAAIA,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACD,QAAMC,OAAO,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAGH,KAAK,CAAC,CAAD,CAAjB;AAAsB,MAAII,QAAQ,GAAG,CAAf;;AACtB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACC,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,UAAMC,EAAE,GAAGN,KAAK,CAACK,CAAD,CAAhB;;AACA,QAAIH,OAAO,CAACI,EAAD,CAAP,IAAe,IAAnB,EAAyB;AACvBJ,MAAAA,OAAO,CAACI,EAAD,CAAP,GAAc,CAAd;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACI,EAAD,CAAP;AACD;;AACD,QAAIJ,OAAO,CAACI,EAAD,CAAP,GAAcF,QAAlB,EAA4B;AAC1BD,MAAAA,KAAK,GAAGG,EAAR;AACAF,MAAAA,QAAQ,GAAGF,OAAO,CAACI,EAAD,CAAlB;AACD;AACF;;AACD,SAAOH,KAAP;AACD","sourcesContent":["/* eslint-disable require-jsdoc */\nimport axios from '../lib/axios.js';\n\nexport const getCategories = (categories) =>\n  new Promise((resolve, reject) => {\n    const category = mostOcurrenciesElement(categories);\n    axios.get(`/api/categories/${category}`)\n        .then((res) => {\n          resolve(res.data.parentCategories);\n        })\n        .catch((err) => {\n          if (err.response && err.response.data && err.response.data.message) {\n            reject(new Error(err.response.data.message));\n          } else {\n            reject(new Error('Error inesperado'));\n          }\n        });\n  });\n\nexport const getItemCategory = (itemId) =>\n  new Promise((resolve, reject) => {\n    axios.get(`/api/categories/item/${itemId}`)\n        .then((res) => {\n          resolve(res.data.category_id);\n        })\n        .catch((err) => {\n          if (err.response && err.response.data && err.response.data.message) {\n            reject(new Error(err.response.data.message));\n          } else {\n            reject(new Error('Error inesperado'));\n          }\n        });\n  });\n\nfunction mostOcurrenciesElement(array) {\n  if (array.length == 0) {\n    return null;\n  }\n  const modeMap = {};\n  let maxEl = array[0]; let maxCount = 1;\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n    if (modeMap[el] == null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n  return maxEl;\n}\n"]},"metadata":{},"sourceType":"module"}