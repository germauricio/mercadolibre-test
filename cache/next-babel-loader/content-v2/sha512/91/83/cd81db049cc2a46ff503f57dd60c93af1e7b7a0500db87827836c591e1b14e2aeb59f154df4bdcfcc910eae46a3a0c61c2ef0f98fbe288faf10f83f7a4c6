{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport ProductDetail from '../../components/ProductDetail';\nimport { useRouter } from 'next/router';\nimport { getItem } from '../../services/itemService';\nimport SearchBox from '../../components/SearchBox';\nimport { getCategories, getItemCategory } from \"../../services/categoryService\";\nimport BreadCrumb from '../../components/BreadCrumb';\n\nconst ProductView = () => {\n  const router = useRouter();\n  const {\n    0: item,\n    1: setItem\n  } = useState('');\n  const {\n    0: categories,\n    1: setCategories\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    setLoading(true);\n\n    (async () => {\n      if (router.query.productId) {\n        const item = await getItem(router.query.productId);\n        setItem(item);\n\n        if (item) {\n          const itemCategory = await getItemCategory(item.id);\n          const categories = await getCategories([itemCategory]);\n          setCategories(categories);\n        }\n\n        setLoading(false);\n      }\n    })();\n  }, [router.query.productId]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(SearchBox, {}), categories && !isLoading && /*#__PURE__*/_jsx(BreadCrumb, {\n      categories: categories\n    }), isLoading || item === '' ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: \"/loading.gif\",\n        height: \"200px\",\n        className: \"loading\",\n        alt: \"loading\"\n      })\n    }) : item ? /*#__PURE__*/_jsx(ProductDetail, {\n      item: item\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: \"notFoundContainer\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: \"No encontramos resultados para tu busqueda\"\n      })\n    })]\n  });\n};\n\nexport default ProductView;","map":null,"metadata":{},"sourceType":"module"}